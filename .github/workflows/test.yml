name: test

on:
  push:
    branches-ignore:
      - "coverage"
  pull_request:
  workflow_dispatch:
    inputs:
      string_var:
        type: string
        description: 'string variable'
        required: false
        default: 'default string'
      choice_var:
        type: choice
        description: 'choice variable'
        required: false
        default: 'b'
        options:
          - 'a'
          - 'b'
          - 'c'
      boolean_var:
        type: boolean
        description: 'boolean variable'
        required: false
        default: false
      environment_var:
        type: environment
        description: 'enviroment variable'
        required: false
        default: prod
      number_var:
        type: number
        description: 'number variable'
        required: false
        default: 1
      test_type_var:
        type: test_type
        description: 'test_type variable'
        required: false
        default: abc
env:
  string_var: ${{ inputs.string_var || "default string" }}
  choice_var: ${{ inputs.choice_var || "b" }}
  boolean_var: ${{ inputs.boolean_var || false }}
  environment_var: ${{ inputs.environment_var || "prod" }}
  number_var: ${{ inputs.number_var || 1 }}
  test_type_var: ${{ inputs.test_type_var || "abc" }}


jobs:
  test:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment_var }}
    steps:
      - name: inputs check
        run: echo "string_var=${{ inputs.string_var }}, choice_var=${{ inputs.choice_var }}, boolean_var=${{ inputs.boolean_var }}, environment_var=${{ inputs.environment_var }}, number_var=${{ inputs.number_var }}, test_type_var=${{ inputs.test_type_var }}"
      - name: env check
        run: echo "string_var=${{ env.string_var }}, choice_var=${{ env.choice_var }}, boolean_var=${{ env.boolean_var }}, environment_var=${{ env.environment_var }}, number_var=${{ env.number_var }}, test_type_var=${{ env.test_type_var }}"
      - name: boolean test
        if: ${{ inputs.boolean_var }}
        run: echo "boolean_var is true"
      - name: string test
        if: ${{ inputs.string_var }}
        run: echo "string_var is true"
      - name: environment test
        run: echo "TEST_VAR=${{ vars.TEST_VAR }}"
